TLDR;
git è un Control Versioning Software (cvs da verificare acronimo!).

INTRO
git è un tool per realizzare quello che in ingegneria del software
viene comunemente chiamato software versioning.
Sentirete parlare di altri tool quali CVS, Subversion, etc. funzionano tutti allo
stesso modo salvo capire eventuli differenze nei termini utilizzati dai vari tool
per indicare quelli che sono i concetti primitivi del versioning ovvero:
branch
tag
head
etc.

COMANDI PRINCIPALI DA RIGA DI COMANDO
git clone uri_repository
// scrivo codice, aggiungo file, elimino file, modifico file, etc.....
git add -A		<-- aggiungo all'HEAD o all'INDEX???
git commit -m 'messaggio'
// per quanto riguarda 'messaggio' farei comunque delle riflessioni di stile.
git push        <-- aggiungo al repository remoto

SE QUALCOSA VA STORTO?
Date un'occhiata alla seguente pagina:
https://help.github.com/articles/dealing-with-non-fast-forward-errors/

In sostanza una soluzione è quella di incaricarmi di effettuare il merge, cioè devo
integrare le modifiche apportate da me con quelle (più aggiornate! giusto?) del
repository remoto.

A questo punto la sequenza di comandi è:
git pull    <-- per scaricare il repository aggiornato
????????
git push

STACKOVERFLOW QUESTIONS
http://stackoverflow.com/questions/3689838/difference-between-head-working-tree-index-in-git

WIKIPEDIA
https://en.wikipedia.org/wiki/List_of_version_control_software

OFFICIAL DOCUMENTATION
https://git-scm.com/doc
https://git-scm.com/docs/git-commit

FRASI CELEBRI
Il commit è un oggetto. Ne viene creato uno ogni volta che si lancia il comando
git commit -m 'messaggio'. Che vuol dire oggetto qui? a che serve? come si usa?

GLOSSARIO
HEAD: the head file points to the branch you currently have checked out.
WORKING TREE:
INDEX = staging area information
<PATHSPEC>:

